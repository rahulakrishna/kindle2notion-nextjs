import { SyntheticEvent, useState } from "react";
import axios from "axios";
import type { NextPage } from "next";
import Head from "next/head";
import Image from "next/image";
import styles from "../styles/Home.module.css";
import {
  Input,
  Button,
  Card,
  Grid,
  Message,
  Statistic,
  Accordion,
  Icon,
  Step,
} from "semantic-ui-react";
import { Form } from "../styles/form.styles";

type Clipping = {
  title: string;
  author: string;
  body: string;
};

type CleanedClipping = {
  title: string;
  author: string;
  clippings: Array<string>;
};

type ClippingsResult = {
  loading: boolean;
  error: boolean | string;
  data: Array<CleanedClipping>;
};

const Home: NextPage = () => {
  const [notionApiAuthToken, setNotionApiAuthToken] = useState("");
  const [notionDatabaseID, setNotionDatabaseID] = useState("");
  const [clippingsFile, setClippingsFile] = useState<any | null>(null);
  const [result, setResult] = useState<ClippingsResult>({
    data: [],
    error: false,
    loading: false,
  });
  const [activeIndex, setActiveIndex] = useState(null);
  const expandAccordion = (e, titleProps) => {
    const { index } = titleProps;
    const newIndex = activeIndex === index ? -1 : index;
    setActiveIndex(newIndex);
  };
  const [activeStep, setActiveStep] = useState(0);
  return (
    <div className={styles.container}>
      <Head>
        <title>Kindle2Notion</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <Step.Group ordered fluid>
        <Step active={activeStep === 0} completed={result.data.length > 0}>
          <Step.Content>
            <Step.Title>Upload</Step.Title>
            <Step.Description>
              Your Clippings file and enter your Notion Tokens
            </Step.Description>
          </Step.Content>
        </Step>
        <Step active={activeStep === 1}>
          <Step.Content>
            <Step.Title>Review & Submit</Step.Title>
            <Step.Description>Your Clippings to Notion</Step.Description>
          </Step.Content>
        </Step>
      </Step.Group>
      {activeStep === 0 && (
        <Form
          onSubmit={(e: SyntheticEvent) => {
            e.preventDefault();
            setResult({
              data: [],
              error: false,
              loading: true,
            });

            axios({
              method: "post",
              url: "api/validate-clippings",
              data: {
                notionApiAuthToken,
                notionDatabaseID,
                clippingsFile,
              },
            })
              .then(({ data }) => {
                console.log({ data });
                setResult({
                  data: data.cleanedClippings,
                  error: false,
                  loading: false,
                });
                setActiveStep(1);
              })
              .catch((e) => {
                setResult({
                  data: [],
                  error: true,
                  loading: false,
                });
              });
          }}
        >
          <Input
            fluid
            type="text"
            size="large"
            placeholder="Notion Token"
            value={notionApiAuthToken}
            onChange={(e) => setNotionApiAuthToken(e.target.value)}
          />
          <br />
          <Input
            fluid
            type="text"
            size="large"
            placeholder="Page ID"
            value={notionDatabaseID}
            onChange={(e) => setNotionDatabaseID(e.target.value)}
          />
          <br />
          <Input
            type="file"
            fluid
            onChange={(e) => {
              if (e.target.files) {
                const file = e.target.files[0];
                const reader = new FileReader();
                reader.readAsText(file);
                reader.onload = () => {
                  setClippingsFile(reader.result);
                };
              }
            }}
          />
          <br />
          <br />
          <Button
            fluid
            primary
            type="submit"
            disabled={
              !notionApiAuthToken || !notionDatabaseID || !clippingsFile
            }
            loading={result.loading}
          >
            Submit
          </Button>
        </Form>
      )}
      {result.error && "Error..."}
      {result.data.length > 0 && <div>Total {result.data.length} books</div>}
      {activeStep === 1 && (
        <div style={{ marginTop: "32px", width: "100%" }}>
          <Grid columns={1} style={{ width: "100%" }}>
            {result.data.map((clipping: CleanedClipping, index) => {
              return (
                <Grid.Column
                  style={{ marginLeft: "0px", marginRight: "0px" }}
                  key={index}
                >
                  <Card
                    fluid
                    header={clipping.title}
                    meta={clipping.author}
                    description={() => (
                      <div>
                        <Accordion>
                          <Accordion.Title
                            active={activeIndex === index}
                            index={index}
                            onClick={expandAccordion}
                          >
                            <Icon name="dropdown" />
                            {clipping.clippings.length} clippings
                          </Accordion.Title>
                          <Accordion.Content active={activeIndex === index}>
                            <ol>
                              {clipping.clippings.map((c, i) => (
                                <li key={i}>
                                  <Message>{c}</Message>
                                </li>
                              ))}
                            </ol>
                          </Accordion.Content>
                        </Accordion>
                      </div>
                    )}
                  />
                </Grid.Column>
              );
            })}
          </Grid>
          <Grid style={{ marginBottom: "32px" }}>
            <Button
              fluid
              primary
              onClick={() => {
                axios({
                  method: "post",
                  url: "api/submit-clippings",
                  data: {
                    notionApiAuthToken,
                    notionDatabaseID,
                  },
                })
                  .then(({ data }) => {
                    console.log({ data });
                  })
                  .catch((e) => {
                    console.error(e);
                  });
              }}
            >
              Upload to Notion
            </Button>
            <br />
            <br />
            <br />
          </Grid>
        </div>
      )}
    </div>
  );
};

export default Home;
