import { SyntheticEvent, useState } from "react";
import axios from "axios";
import type { NextPage } from "next";
import Head from "next/head";
import Image from "next/image";
import styles from "../styles/Home.module.css";
import {
  Input,
  Button,
  Card,
  Grid,
  Message,
  Statistic,
} from "semantic-ui-react";
import { Form } from "../styles/form.styles";

type Clipping = {
  title: string;
  author: string;
  body: string;
};

type CleanedClipping = {
  title: string;
  author: string;
  clippings: Array<string>;
};

type ClippingsResult = {
  loading: boolean;
  error: boolean | string;
  data: Array<CleanedClipping>;
};

const Home: NextPage = () => {
  const [notionApiAuthToken, setNotionApiAuthToken] = useState("");
  const [notionDatabaseID, setNotionDatabaseID] = useState("");
  const [clippingsFile, setClippingsFile] = useState<any | null>(null);
  const [result, setResult] = useState<ClippingsResult>({
    data: [],
    error: false,
    loading: false,
  });
  return (
    <div className={styles.container}>
      <Head>
        <title>Kindle2Notion</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <Form
        onSubmit={(e: SyntheticEvent) => {
          e.preventDefault();
          setResult({
            data: [],
            error: false,
            loading: true,
          });

          axios({
            method: "post",
            url: "api/validate-clippings",
            data: {
              notionApiAuthToken,
              notionDatabaseID,
              clippingsFile,
            },
          })
            .then(({ data }) => {
              console.log({ data });
              setResult({
                data: data.cleanedClippings,
                error: false,
                loading: false,
              });
            })
            .catch((e) => {
              setResult({
                data: [],
                error: true,
                loading: false,
              });
            });
        }}
      >
        <Input
          fluid
          type="text"
          size="large"
          placeholder="Notion Token"
          value={notionApiAuthToken}
          onChange={(e) => setNotionApiAuthToken(e.target.value)}
        />
        <Input
          fluid
          type="text"
          size="large"
          placeholder="Page ID"
          value={notionDatabaseID}
          onChange={(e) => setNotionDatabaseID(e.target.value)}
        />
        <Input
          type="file"
          fluid
          onChange={(e) => {
            if (e.target.files) {
              const file = e.target.files[0];
              const reader = new FileReader();
              reader.readAsText(file);
              reader.onload = () => {
                setClippingsFile(reader.result);
              };
            }
          }}
        />
        <Button
          fluid
          primary
          type="submit"
          disabled={!notionApiAuthToken || !notionDatabaseID || !clippingsFile}
          loading={result.loading}
        >
          Submit
        </Button>
      </Form>
      {result.error && "Error..."}
      {result.data.length > 0 && <div>Total {result.data.length} books</div>}
      <div style={{ marginTop: "32px", width: "100%" }}>
        <Grid columns={1} style={{ width: "100%" }}>
          {result.data.map((clipping: CleanedClipping, index) => {
            return (
              <Grid.Column
                style={{ marginLeft: "0px", marginRight: "0px" }}
                key={index}
              >
                <Card
                  fluid
                  header={clipping.title}
                  meta={clipping.author}
                  description={() => (
                    <div>
                      <ol>
                        {clipping.clippings.map((c, i) => (
                          <li key={i}>
                            <Message>{c}</Message>
                          </li>
                        ))}
                      </ol>
                    </div>
                  )}
                />
              </Grid.Column>
            );
          })}
        </Grid>
        <Grid style={{ marginBottom: "32px" }}>
          <Button fluid primary>
            Upload to Notion
          </Button>
        </Grid>
      </div>
    </div>
  );
};

export default Home;
