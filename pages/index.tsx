import { SyntheticEvent, useEffect, useState } from "react";
import type { NextPage } from "next";
import Head from "next/head";
import styles from "../styles/Home.module.css";
import { Step } from "semantic-ui-react";

import ValidateForm from "./validate-form";
import SubmitForm from "./submit-form";

import { ClippingsResult } from "./types";

const Home: NextPage = () => {
  const [notionApiAuthToken, setNotionApiAuthToken] = useState("");
  const [notionDatabaseID, setNotionDatabaseID] = useState("");
  useEffect(() => {
    if (typeof window !== "undefined") {
      const authTokenFromLocalStorage =
        localStorage.getItem("notionApiAuthToken");
      const databaseIdFromLocalStorage =
        localStorage.getItem("notionDatabaseId");

      setNotionApiAuthToken(authTokenFromLocalStorage || "");
      setNotionDatabaseID(databaseIdFromLocalStorage || "");
    }
  }, []);
  const [clippingsFile, setClippingsFile] = useState<any | null>(null);
  const [result, setResult] = useState<ClippingsResult>({
    data: [],
    error: false,
    loading: false,
  });
  const [activeIndex, setActiveIndex] = useState(null);
  const expandAccordion = (e: SyntheticEvent, titleProps: any) => {
    const { index } = titleProps;
    const newIndex = activeIndex === index ? -1 : index;
    setActiveIndex(newIndex);
  };
  const [activeStep, setActiveStep] = useState(0);
  const [completed, setCompleted] = useState<boolean>(false);
  return (
    <div className={styles.container}>
      <Head>
        <title>Kindle2Notion</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <Step.Group ordered fluid>
        <Step active={activeStep === 0} completed={result.data.length > 0}>
          <Step.Content>
            <Step.Title>Upload</Step.Title>
            <Step.Description>
              Your Clippings file and enter your Notion Tokens
            </Step.Description>
          </Step.Content>
        </Step>
        <Step active={activeStep === 1} completed={completed}>
          <Step.Content>
            <Step.Title>Review & Submit</Step.Title>
            <Step.Description>Your Clippings to Notion</Step.Description>
          </Step.Content>
        </Step>
      </Step.Group>
      {activeStep === 0 && (
        <ValidateForm
          notionApiAuthToken={notionApiAuthToken}
          setNotionApiAuthToken={setNotionApiAuthToken}
          notionDatabaseID={notionDatabaseID}
          setNotionDatabaseID={setNotionDatabaseID}
          setResult={setResult}
          clippingsFile={clippingsFile}
          setClippingsFile={setClippingsFile}
          setActiveStep={setActiveStep}
          resultLoading={result.loading}
        />
      )}
      {result.error && "Error..."}
      {result.data.length > 0 && <div>Total {result.data.length} books</div>}
      {activeStep === 1 && (
        <SubmitForm
          clippings={result.data}
          activeIndex={activeIndex}
          expandAccordion={expandAccordion}
          notionApiAuthToken={notionApiAuthToken}
          notionDatabaseID={notionDatabaseID}
          books={result.data}
          setCompleted={setCompleted}
        />
      )}
    </div>
  );
};

export default Home;
